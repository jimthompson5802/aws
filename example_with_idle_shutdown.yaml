# Example YAML specification demonstrating CloudWatch idle shutdown configuration
# This file shows how to configure automatic shutdown of EC2 instances when they're idle

instances:
  - name: "development-server"
    instance_type: "t3.medium"
    ami_id: "ami-0c02fb55956c7d316"  # Amazon Linux 2 AMI
    market_type: "spot"  # Use spot instances for cost savings
    spot_price: "0.05"
    key_name: "my-dev-key"
    security_groups:
      - "sg-dev-environment"
    subnet_id: "subnet-dev-12345"
    tags:
      - Key: "Environment"
        Value: "development"
      - Key: "Project"
        Value: "cost-optimization"
      - Key: "AutoShutdown"
        Value: "enabled"
    user_data:
      script_path: "examples/dev_environment.sh"
    # CloudWatch idle shutdown configuration
    idle_shutdown:
      cpu_threshold: 10.0          # Stop when CPU < 10% 
      evaluation_minutes: 15       # For 15 minutes continuously
      action: "stop"               # Action: "stop" or "terminate"
    volumes:
      - size: 50
        type: "gp3"
        device: "/dev/sdf"
        encrypted: true

  - name: "data-processing-server"
    instance_type: "c5.xlarge"
    ami_id: "ami-0c02fb55956c7d316"
    market_type: "on-demand"
    key_name: "my-data-key"
    security_groups:
      - "sg-data-processing"
    tags:
      - Key: "Environment"
        Value: "production"
      - Key: "Role"
        Value: "batch-processing"
    user_data:
      inline_script: |
        #!/bin/bash
        yum update -y
        yum install -y python3 python3-pip
        pip3 install pandas numpy boto3
        
        # Create processing directory
        mkdir -p /opt/data-processing
        cd /opt/data-processing
        
        echo "Data processing environment ready!"
    # More aggressive idle shutdown for batch processing
    idle_shutdown:
      cpu_threshold: 5.0           # Stop when CPU < 5%
      evaluation_minutes: 10       # For 10 minutes continuously  
      action: "terminate"          # Terminate to save costs
    volumes:
      - size: 100
        type: "gp3"
        device: "/dev/sdf"
        iops: 3000
        encrypted: true

  - name: "web-server-production"
    instance_type: "t3.small"
    ami_id: "ami-0c02fb55956c7d316"
    market_type: "on-demand"
    key_name: "my-prod-key"
    security_groups:
      - "sg-web-production"
    tags:
      - Key: "Environment"
        Value: "production"
      - Key: "Role"
        Value: "web-server"
    user_data:
      script_path: "examples/python_web_server.sh"
    # No idle shutdown for production web servers
    # (idle_shutdown section omitted - servers stay running)
    volumes:
      - size: 20
        type: "gp3"
        device: "/dev/sdf"
        encrypted: true

  - name: "ml-training-server"
    instance_type: "p3.2xlarge"  # GPU instance for ML training
    ami_id: "ami-0c02fb55956c7d316"
    market_type: "spot"
    spot_price: "1.50"
    key_name: "my-ml-key"
    security_groups:
      - "sg-ml-training"
    tags:
      - Key: "Environment"
        Value: "development"
      - Key: "Role"
        Value: "ml-training"
      - Key: "CostOptimization"
        Value: "high-priority"
    user_data:
      script_path: "examples/data_science_setup.sh"
    # Conservative idle shutdown for expensive GPU instances
    idle_shutdown:
      cpu_threshold: 15.0          # Stop when CPU < 15%
      evaluation_minutes: 30       # For 30 minutes continuously
      action: "stop"               # Stop (don't terminate) to preserve setup
    volumes:
      - size: 500
        type: "gp3"
        device: "/dev/sdf"
        iops: 4000
        encrypted: true
      - size: 1000  # Large storage for datasets
        type: "gp3"
        device: "/dev/sdg"
        encrypted: true

# Optional: Global profile configuration
# profile: "development"  # AWS profile to use for authentication
